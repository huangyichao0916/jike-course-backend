{"version":3,"sources":["store/constants.ts","store/action.ts","mock/course-lesson-data/index.js","serviceWorker.js","store/reducers.ts","store/index.ts","routes/index.js","index.js"],"names":["ADD_RECORD_TO_RECHARGE_RECORD","BUY_LESSON","RECHARGE","ADD_DATA_TO_MINE_PAGE","SET_IS_DOTED_TO_TRUE","SET_IS_DOTED_TO_FALSE","ADD_PURCHASED_LESSONS_TO_STUDY_PAGE","ADD_DATA_TO_PRACTICE_CAMP","SET_PRACTICE_CAMP_TO_BE_PURCHASED","ADD_DATA_TO_COURSE_LESSON","SET_LESSON_TO_BE_PURCHASED","REFRESH_COURSE_LESSON","buyLessonActionCreator","payload","type","constants","addDataToMinePageActionCreator","setIsDotedToTrueActionCreator","setIsDotedToFalseActionCreator","addPurchasedLessonsToStudyPageActionCreator","addDataToPracticeCampActionCreator","addDataToCourseLessonActionCreator","refreshCourseLessonActionCreator","practiceCampBuyLessonActionCreator","price","index","lesson","dispatch","rechargeAndRecordActionCreator","howMuch","console","log","d","Date","newPayload","year","slice","time","number","addRecordToRechargeRecordActionCreator","lessonBuyLessonActionCreator","courseLessons","require","urlReg","Mock","mock","option","url","offset","parseInt","match","data","Boolean","window","location","hostname","defaultMineItemState","List","defaultCourseLessonItemState","defaultPracticeCampItemState","defaultStudyItemState","defaultRechargeRecordState","reducers","account","state","action","mineItemDateSource","setIn","courseLessonDataSource","push","practiceCampDataSource","studyItemDatatSource","rechargeRecordDataSource","unshift","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","SuspenseComponent","Component","props","fallback","Course","lazy","Discover","Mine","Study","App","Account","Home","Lesson","LessonEveryday","PracticeCamp","RechargeRecord","AllDiscoverLessonEveryday","allDiscoverTotalChoiceness","Login","routes","path","component","exact","render","to","axios","get","then","res","items","ReactDOM","StrictMode","renderRoutes","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e50fc787.chunk.js","sourcesContent":["//充值明细相关的action type\nexport const ADD_RECORD_TO_RECHARGE_RECORD = 'ADD_RECORD_TO_RECHARGE_RECORD';\nexport type ADD_RECORD_TO_RECHARGE_RECORD = typeof ADD_RECORD_TO_RECHARGE_RECORD;\n\n//account相关的action type\nexport const BUY_LESSON = 'BUY_LESSON';\nexport type BUY_LESSON = typeof BUY_LESSON;\nexport const RECHARGE = 'RECHARGE';\nexport type RECHARGE = typeof RECHARGE;\n\n//mineItemDateSource相关的action type\nexport const ADD_DATA_TO_MINE_PAGE = 'ADD_DATA_TO_MINE_PAGE';\nexport type ADD_DATA_TO_MINE_PAGE = typeof ADD_DATA_TO_MINE_PAGE;\nexport const SET_IS_DOTED_TO_TRUE = 'SET_IS_DOTED_TO_TRUE';\nexport type SET_IS_DOTED_TO_TRUE = typeof SET_IS_DOTED_TO_TRUE;\nexport const SET_IS_DOTED_TO_FALSE = 'SET_IS_DOTED_TO_FALSE';\nexport type SET_IS_DOTED_TO_FALSE = typeof SET_IS_DOTED_TO_FALSE;\n\n//studyItem相关的action type\nexport const ADD_PURCHASED_LESSONS_TO_STUDY_PAGE =\n    'ADD_PURCHASED_LESSONS_TO_STUDY_PAGE';\nexport type ADD_PURCHASED_LESSONS_TO_STUDY_PAGE = typeof ADD_PURCHASED_LESSONS_TO_STUDY_PAGE;\n\n//讲堂 -》 训练营相关的action type\nexport const ADD_DATA_TO_PRACTICE_CAMP = 'ADD_DATA_TO_PRACTICE_CAMP';\nexport type ADD_DATA_TO_PRACTICE_CAMP = typeof ADD_DATA_TO_PRACTICE_CAMP;\nexport const SET_PRACTICE_CAMP_TO_BE_PURCHASED =\n    'SET_PRACTICE_CAMP_TO_BE_PURCHASED';\nexport type SET_PRACTICE_CAMP_TO_BE_PURCHASED = typeof SET_PRACTICE_CAMP_TO_BE_PURCHASED;\n\n//courseLessonItem相关的action type\nexport const ADD_DATA_TO_COURSE_LESSON = 'ADD_DATA_TO_COURSE_LESSON';\nexport type ADD_DATA_TO_COURSE_LESSON = typeof ADD_DATA_TO_COURSE_LESSON;\nexport const SET_LESSON_TO_BE_PURCHASED = 'SET_LESSON_TO_BE_PURCHASED';\nexport type SET_LESSON_TO_BE_PURCHASED = typeof SET_LESSON_TO_BE_PURCHASED;\nexport const REFRESH_COURSE_LESSON = 'REFRESH_COURSE_LESSON';\nexport type REFRESH_COURSE_LESSON = typeof REFRESH_COURSE_LESSON;\n","import '@/mock/course-lesson-data';\nimport * as constants from './constants';\nimport { ThunkAction } from 'redux-thunk';\nimport {\n    RootState,\n    MinePageDataItem,\n    CourseLessonItem,\n    PracticeCampItemInt,\n    StudyItemInt,\n    RechargeRecordItemInt,\n} from './types';\n\n/**\n * 充值明细相关的action 和 action creator\n */\nexport interface AddRecordToRechargeRecordAction {\n    type: constants.ADD_RECORD_TO_RECHARGE_RECORD;\n    [otherProps: string]: any;\n}\nexport const addRecordToRechargeRecordActionCreator = (\n    payload: number\n): AddRecordToRechargeRecordAction => {\n    //payload为充值的数目\n    let d = Date();\n    let year: string = d.slice(11, 15) + d.slice(4, 7) + d.slice(8, 10);\n    let time: string = d.slice(16, 25);\n    let newPayload: RechargeRecordItemInt = {\n        year,\n        time,\n        number: payload,\n    };\n    return {\n        type: constants.ADD_RECORD_TO_RECHARGE_RECORD,\n        payload: newPayload,\n    };\n};\n\n/**\n * account相关的action creator\n */\nexport interface BuyLessonAction {\n    type: constants.BUY_LESSON;\n    [anyProps: string]: any;\n}\nexport const buyLessonActionCreator = (payload: number): BuyLessonAction => {\n    return {\n        type: constants.BUY_LESSON,\n        payload,\n    };\n};\nexport interface RechargeAction {\n    type: constants.RECHARGE;\n    [anyProps: string]: any;\n}\nexport const rechargeActionCreator = (payload: number): RechargeAction => {\n    //payload为充值的数目\n    console.log(payload);\n    return {\n        type: constants.RECHARGE,\n        payload,\n    };\n};\n\n/**\n * mineItemDateSource相关的action creator\n */\nexport interface AddDataToMinePageAction {\n    type: constants.ADD_DATA_TO_MINE_PAGE;\n    [anyProps: string]: any;\n}\nexport interface SetIsDotedToTrueAction {\n    type: constants.SET_IS_DOTED_TO_TRUE;\n    [anyProps: string]: any;\n}\nexport interface SetIsDotedToFalseAction {\n    type: constants.SET_IS_DOTED_TO_FALSE;\n    [anyProps: string]: any;\n}\n\nexport const addDataToMinePageActionCreator = (\n    payload: Array<MinePageDataItem>\n): AddDataToMinePageAction => {\n    //现在的payload是mine的datasource\n    return {\n        type: constants.ADD_DATA_TO_MINE_PAGE,\n        payload,\n    };\n};\nexport const setIsDotedToTrueActionCreator = (\n    payload: number\n): SetIsDotedToTrueAction => {\n    //现在的payload是mineItem的key\n    return {\n        type: constants.SET_IS_DOTED_TO_TRUE,\n        payload,\n    };\n};\nexport const setIsDotedToFalseActionCreator = (\n    payload: number\n): SetIsDotedToFalseAction => {\n    //现在的payload是mineItem的key\n    return {\n        type: constants.SET_IS_DOTED_TO_FALSE,\n        payload,\n    };\n};\n\n/**\n * studyItem相关的actioncreator\n */\nexport interface AddPurchasedLessonsToStudyPageAction {\n    type: constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE;\n    [anyProps: string]: any;\n}\nexport const addPurchasedLessonsToStudyPageActionCreator = (\n    payload: StudyItemInt\n): AddPurchasedLessonsToStudyPageAction => {\n    return {\n        type: constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE,\n        payload,\n    };\n};\n\n/**\n * 讲堂 -》 训练营相关的action 以及action creator\n */\nexport interface AddDataToPracticeCampAction {\n    type: constants.ADD_DATA_TO_PRACTICE_CAMP;\n    [anyProps: string]: any;\n}\nexport const addDataToPracticeCampActionCreator = (\n    payload: Array<PracticeCampItemInt>\n): AddDataToPracticeCampAction => {\n    //现在的payload是数据\n    return {\n        type: constants.ADD_DATA_TO_PRACTICE_CAMP,\n        payload,\n    };\n};\nexport interface SetPracticeCampToBePurchasedAction {\n    type: constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED;\n    [anyProps: string]: any;\n}\nexport const setPracticeCampToBePurchasedActionCreator = (\n    payload: number\n): SetPracticeCampToBePurchasedAction => {\n    //现在的payload是 id\n    return {\n        type: constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED,\n        payload,\n    };\n};\n\n/**\n * courseLessonItem相关的action creator\n */\nexport interface AddDataToCourseLessonAction {\n    type: constants.ADD_DATA_TO_COURSE_LESSON;\n    [anyProps: string]: any;\n}\nexport const addDataToCourseLessonActionCreator = (\n    payload: Array<CourseLessonItem>\n): AddDataToCourseLessonAction => {\n    //现在的payload是数据\n    return {\n        type: constants.ADD_DATA_TO_COURSE_LESSON,\n        payload,\n    };\n};\nexport interface RefreshCourseLessonAction {\n    type: constants.REFRESH_COURSE_LESSON;\n    [anyProps: string]: any;\n}\nexport const refreshCourseLessonActionCreator = (\n    payload: Array<CourseLessonItem>\n): RefreshCourseLessonAction => {\n    return {\n        type: constants.REFRESH_COURSE_LESSON,\n        payload,\n    };\n};\nexport interface SetLessonToBePurchasedAction {\n    type: constants.SET_LESSON_TO_BE_PURCHASED;\n    [anyProps: string]: any;\n}\nexport const setLessonToBePurchasedActionCreator = (\n    payload: number\n): SetLessonToBePurchasedAction => {\n    //现在的payload是索引\n    return {\n        type: constants.SET_LESSON_TO_BE_PURCHASED,\n        payload,\n    };\n};\n\n//声明Action的联合类型\nexport type ActionType =\n    | AddRecordToRechargeRecordAction\n    | BuyLessonAction\n    | RechargeAction\n    | AddDataToMinePageAction\n    | SetIsDotedToTrueAction\n    | SetIsDotedToFalseAction\n    | AddPurchasedLessonsToStudyPageAction\n    | AddDataToPracticeCampAction\n    | SetPracticeCampToBePurchasedAction\n    | AddDataToCourseLessonAction\n    | SetLessonToBePurchasedAction\n    | RefreshCourseLessonAction;\n\n//声明ThunkAction\nexport type ThunkActionType = ThunkAction<any, RootState, any, ActionType>;\n\n// practiceCamp购买课程相关的action creator\nexport const practiceCampBuyLessonActionCreator = (\n    price: number,\n    index: number,\n    lesson: StudyItemInt\n): ThunkActionType => {\n    return (dispatch) => {\n        dispatch(buyLessonActionCreator(price));\n        dispatch(setIsDotedToTrueActionCreator(0));\n        dispatch(setIsDotedToTrueActionCreator(1));\n        dispatch(setIsDotedToTrueActionCreator(2));\n        dispatch(setPracticeCampToBePurchasedActionCreator(index));\n        dispatch(addPurchasedLessonsToStudyPageActionCreator(lesson));\n    };\n};\nexport const rechargeAndRecordActionCreator = (\n    howMuch: number\n): ThunkActionType => {\n    return (dispatch) => {\n        dispatch(rechargeActionCreator(howMuch));\n        dispatch(addRecordToRechargeRecordActionCreator(howMuch));\n        // console.log(getState().getIn(['rechargeRecordDataSource'].toJS()));\n    };\n};\nexport const lessonBuyLessonActionCreator = (\n    price: number,\n    index: number,\n    lesson: StudyItemInt\n): ThunkActionType => {\n    return (dispatch) => {\n        dispatch(buyLessonActionCreator(price));\n        dispatch(setIsDotedToTrueActionCreator(0));\n        dispatch(setIsDotedToTrueActionCreator(1));\n        dispatch(setIsDotedToTrueActionCreator(2));\n        dispatch(addPurchasedLessonsToStudyPageActionCreator(lesson));\n        dispatch(setLessonToBePurchasedActionCreator(index));\n    };\n};\n","import Mock from 'mockjs';\nconst courseLessons = require('./courseLessons.json');\n\nconst urlReg = /\\/mock\\/course\\/lesson\\?offset\\=(\\d{1,})/;\n\nconst data = Mock.mock(urlReg, function (option) {\n    const { url } = option;\n    const offset = parseInt(url.match(urlReg)[1]);\n\n    if (offset > 110) {\n        return null;\n    }\n\n    return {\n        data: courseLessons.slice(offset, offset + 10),\n        offset: offset + 10,\n    };\n\n    // return courseLessons.slice(offset,offset + 10);\n});\n\nexport default data;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { List } from 'immutable';\nimport * as constants from './constants';\nimport {\n    BalanceState,\n    MineItemState,\n    CourseLessonItemState,\n    PracticeCampItemState,\n    StudyItemState,\n    RechargeRecordState,\n    RootState,\n} from './types';\nimport { Reducer, ReducersMapObject } from 'redux';\nimport { ActionType } from './action';\n\nlet defaultBalanceState: BalanceState = 10000;\nconst balanceReducer: Reducer<BalanceState, ActionType> = (\n    state = defaultBalanceState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.BUY_LESSON:\n            return state - payload;\n        case constants.RECHARGE:\n            return state + payload;\n        default:\n            return state;\n    }\n};\n\nconst defaultMineItemState: MineItemState = List([]);\nconst mineItemReducer: Reducer<MineItemState, ActionType> = (\n    state = defaultMineItemState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_MINE_PAGE:\n            return List(payload);\n        case constants.SET_IS_DOTED_TO_TRUE:\n            return state.setIn([payload, 'isDotShow'], 1);\n        case constants.SET_IS_DOTED_TO_FALSE:\n            return state.setIn([payload, 'isDotShow'], 0);\n        default:\n            return state;\n    }\n};\n\nconst defaultCourseLessonItemState: CourseLessonItemState = List([]);\nconst courseLessonItemReducer: Reducer<CourseLessonItemState, ActionType> = (\n    state = defaultCourseLessonItemState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_COURSE_LESSON:\n            return state.push(...payload);\n        case constants.SET_LESSON_TO_BE_PURCHASED:\n            return state.setIn([payload, 'haveLearned'], true);\n        case constants.REFRESH_COURSE_LESSON:\n            return List(payload);\n        default:\n            return state;\n    }\n};\n\nconst defaultPracticeCampItemState: PracticeCampItemState = List([]);\nconst practiceCampItemReducer: Reducer<PracticeCampItemState, ActionType> = (\n    state = defaultPracticeCampItemState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.ADD_DATA_TO_PRACTICE_CAMP:\n            return List(payload);\n        case constants.SET_PRACTICE_CAMP_TO_BE_PURCHASED:\n            return state.setIn([payload, 'haveLearned'], true);\n        default:\n            return state;\n    }\n};\n\nconst defaultStudyItemState: StudyItemState = List([]);\nconst studyItemReducer: Reducer<StudyItemState, ActionType> = (\n    state = defaultStudyItemState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.ADD_PURCHASED_LESSONS_TO_STUDY_PAGE:\n            return state.push(payload);\n        default:\n            return state;\n    }\n};\n\nconst defaultRechargeRecordState: RechargeRecordState = List([]);\nconst rechargeRecordReducer: Reducer<RechargeRecordState, ActionType> = (\n    state = defaultRechargeRecordState,\n    action\n) => {\n    const { type, payload } = action;\n    switch (type) {\n        case constants.ADD_RECORD_TO_RECHARGE_RECORD:\n            return state.unshift(payload);\n        default:\n            return state;\n    }\n};\n\nconst reducers: ReducersMapObject<RootState, ActionType> = {\n    account: balanceReducer, //账户余额 Number\n    mineItemDateSource: mineItemReducer, //我的 页面的每一项的数据 Array\n    courseLessonDataSource: courseLessonItemReducer, //讲堂的课程页面下面的数据源 Array\n    practiceCampDataSource: practiceCampItemReducer, //讲堂的训练营下面的数据源  Array\n    studyItemDatatSource: studyItemReducer, // 我的学习下面的数据源\n    rechargeRecordDataSource: rechargeRecordReducer, //充值明细的数据源  Array\n};\n\nexport default reducers;\n","import { combineReducers } from 'redux-immutable';\nimport { createStore, applyMiddleware, Reducer, Store } from 'redux';\nimport { RootState } from './types';\nimport { ActionType } from './action';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\nconst rootReducer: Reducer<RootState, ActionType> = combineReducers<\n    RootState,\n    ActionType\n>(reducers);\n\nconst store: Store<RootState, ActionType> = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n);\n\nexport default store;\n","import React, { lazy, Suspense } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SuspenseComponent = (Component) => (props) => {\n    return (\n        <Suspense fallback={null}>\n            <Component {...props}></Component>\n        </Suspense>\n    );\n};\n\nconst Course = lazy(() => import('@/pages/course'));\nconst Discover = lazy(() => import('@/pages/discover'));\nconst Mine = lazy(() => import('@/pages/mine'));\nconst Study = lazy(() => import('@/pages/study'));\nconst App = lazy(() => import('@/App'));\nconst Account = lazy(() => import('@/pages/account'));\nconst Home = lazy(() => import('@/pages/home'));\nconst Lesson = lazy(() => import('@/pages/course/lesson'));\nconst LessonEveryday = lazy(() => import('@/pages/course/lessonEveryday'));\nconst PracticeCamp = lazy(() => import('@/pages/course/practiceCamp'));\nconst RechargeRecord = lazy(() => import('@/pages/rechargeRecord'));\nconst AllDiscoverLessonEveryday = lazy(() =>\n    import('@/pages/allDiscoverLessonEveryday')\n);\nconst allDiscoverTotalChoiceness = lazy(() =>\n    import('@/pages/allDiscoverTotalChoiceness')\n);\nconst Login = lazy(() => import('@/pages/login'));\n\nconst routes = [\n    {\n        path: '/',\n        component: SuspenseComponent(App),\n        routes: [\n            {\n                path: '/',\n                exact: true,\n                render: () => <Redirect to=\"/login\" />,\n            },\n            {\n                path: '/home',\n                component: SuspenseComponent(Home),\n                routes: [\n                    {\n                        path: '/home',\n                        exact: true,\n                        render: () => <Redirect to=\"/home/discover\" />,\n                    },\n                    {\n                        path: '/home/discover',\n                        component: SuspenseComponent(Discover),\n                    },\n                    {\n                        path: '/home/course',\n                        component: SuspenseComponent(Course),\n                        routes: [\n                            {\n                                path: '/home/course',\n                                exact: true,\n                                render: () => (\n                                    <Redirect to=\"/home/course/lesson\" />\n                                ),\n                            },\n                            {\n                                path: '/home/course/lesson',\n                                component: SuspenseComponent(Lesson),\n                            },\n                            {\n                                path: '/home/course/practiceCamp',\n                                component: SuspenseComponent(PracticeCamp),\n                            },\n                            {\n                                path: '/home/course/lessonEveryday',\n                                component: SuspenseComponent(LessonEveryday),\n                            },\n                        ],\n                    },\n                    {\n                        path: '/home/mine',\n                        component: SuspenseComponent(Mine),\n                    },\n                    {\n                        path: '/home/study',\n                        component: SuspenseComponent(Study),\n                    },\n                ],\n            },\n            {\n                path: '/account',\n                component: SuspenseComponent(Account),\n            },\n            {\n                path: '/rechargeRecord',\n                component: SuspenseComponent(RechargeRecord),\n            },\n            {\n                path: '/allDiscoverLessonEveryday',\n                component: SuspenseComponent(AllDiscoverLessonEveryday),\n            },\n            {\n                path: '/allDiscoverTotalChoiceness',\n                component: SuspenseComponent(allDiscoverTotalChoiceness),\n            },\n            {\n                path: '/login',\n                component: SuspenseComponent(Login),\n            },\n        ],\n    },\n];\n\nexport default routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { renderRoutes } from 'react-router-config';\nimport * as serviceWorker from './serviceWorker';\nimport './index.styl';\nimport axios from 'axios';\n\nimport store from '@/store';\nimport { addDataToMinePageActionCreator } from '@/store/action';\n\nimport routes from '@/routes';\n\nimport { Provider } from 'react-redux';\n\naxios\n    .get('/mine/mineItem.json')\n    .then((res) => res.data.items)\n    .then((res) => store.dispatch(addDataToMinePageActionCreator(res)));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}