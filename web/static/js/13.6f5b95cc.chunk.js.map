{"version":3,"sources":["assets/imgs/account.png","assets/imgs/avatar.JPG","components/mine/mineItem/index.tsx","pages/mine/index.tsx","baseUI/header/index.tsx"],"names":["module","exports","MineItem","this","props","isDotShow","title","myClassName","linkTo","balance","id","icon","handleOnClick","isDotShowBoo","to","className","onClick","dangerouslySetInnerHTML","__html","Component","Mine","Swiper","loop","autoplay","delay","BScroll","scrollY","click","scrollX","items","myItems","map","i","isBalanceShow","classNames","hidden","key","middleTitle","rightTitle","src","avatar","alt","imgg","width","height","length","connect","state","getIn","toJS","dispatch","setIsDotedToFalseActionCreator","console","log","judgeIsItIconfont","Header","divLeft","divRight","divMiddle","isGoBackNeeded","leftTitle","leftTitleURL","rightTitleURL","Error","window","history","back","test","e","preventDefault"],"mappings":"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","file":"static/js/13.6f5b95cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/account.6527da1d.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.1864e6d2.JPG\";","import React, { Component } from 'react';\r\nimport './mineItem.styl';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    title: string;\r\n    linkTo: string;\r\n    myClassName: string;\r\n    isDotShow: number;\r\n    id: number;\r\n    icon: string;\r\n\r\n    balance: number;\r\n    handleOnClick: (id: number, isDotShow: boolean) => void;\r\n}\r\nclass MineItem extends Component<Props> {\r\n    render() {\r\n        // console.log(this.props)\r\n        let {\r\n            isDotShow,\r\n            title,\r\n            myClassName,\r\n            linkTo,\r\n            balance,\r\n            id,\r\n            icon,\r\n            handleOnClick,\r\n        } = this.props;\r\n        const isDotShowBoo: boolean = isDotShow === 1 ? true : false;\r\n        // console.log(title)\r\n        return (\r\n            <Link\r\n                to={linkTo}\r\n                className={myClassName}\r\n                onClick={() => handleOnClick(id, isDotShowBoo)}\r\n            >\r\n                <span\r\n                    className=\"icon iconfont left\"\r\n                    dangerouslySetInnerHTML={{ __html: icon }}\r\n                ></span>\r\n                <div className=\"title-wrapper\">\r\n                    <div className=\"title\">{title}</div>\r\n                    {isDotShowBoo && <div className=\"red-dot\"></div>}\r\n                    <div className=\"detail\">{balance}</div>\r\n                </div>\r\n                <span className=\"icon iconfont right\">&#xe613;</span>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MineItem;\r\n","import React, { Component, Dispatch } from 'react';\nimport './mine.styl';\nimport avatar from '@/assets/imgs/avatar.JPG';\nimport imgg from '@/assets/imgs/account.png';\nimport MineItem from '@/components/mine/mineItem';\nimport Swiper from 'swiper';\nimport 'swiper/css/swiper.min.css';\nimport classNames from 'classnames';\nimport BScroll from 'better-scroll';\nimport Header from '@/baseUI/header';\n\nimport { connect } from 'react-redux';\n\nimport { MinePageDataItem } from '@/store/types';\nimport {\n    setIsDotedToFalseActionCreator,\n    SetIsDotedToFalseAction,\n} from '@/store/action';\n\ninterface Props {\n    items: Array<MinePageDataItem>;\n    balance: number;\n    handleOnClick: (id: number, isDotShow: boolean) => void;\n}\nclass Mine extends Component<Props> {\n    componentDidMount() {\n        new Swiper('.slider-container', {\n            loop: true,\n            autoplay: {\n                delay: 2000,\n            },\n        });\n        new BScroll('.bscroll-wrapper', {\n            scrollY: true,\n            click: true,\n            scrollX: false,\n        });\n    }\n    render() {\n        let { items, handleOnClick, balance } = this.props;\n        const myItems: Array<JSX.Element> = items.map((i: MinePageDataItem) => {\n            const { id, title, isBalanceShow, linkTo, isDotShow, icon } = i;\n\n            const myClassName: string = classNames({\n                'mine-item-wrapper': true,\n                hidden: isBalanceShow === 1 ? false : true,\n            });\n            return (\n                <MineItem\n                    title={title}\n                    linkTo={linkTo}\n                    myClassName={myClassName}\n                    isDotShow={isDotShow}\n                    id={id}\n                    icon={icon}\n                    balance={balance}\n                    key={id}\n                    handleOnClick={handleOnClick}\n                />\n            );\n        });\n        return (\n            <div className=\"mine\">\n                <Header middleTitle={'我的'} rightTitle={'&#xe665;'} />\n                <div className=\"bscroll-wrapper\">\n                    <div className=\"content\">\n                        <div className=\"mine-info-wrapper\">\n                            <div className=\"avatar\">\n                                <img src={avatar} alt=\"图片不见了\" />\n                            </div>\n                            <div className=\"name-and-phone\">\n                                <h3 className=\"name\">Geek_14dce3</h3>\n                                <div className=\"phone-and-selfPage\">\n                                    <div className=\"phone\">12345678910</div>\n                                    <div className=\"selfPage\">\n                                        个人主页\n                                        <span className=\"icon iconfont right\">\n                                            &#xe613;\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"slider-container\">\n                            <div className=\"swiper-wrapper\">\n                                <div className=\"swiper-slide\">\n                                    <img\n                                        src={imgg}\n                                        alt=\"图片不见了\"\n                                        width=\"100%\"\n                                        height=\"100%\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        {myItems.length > 0 && myItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.getIn(['mineItemDateSource']).toJS(),\n        balance: state.getIn(['account']),\n    };\n};\nconst mapDispatchToProps = (dispatch: Dispatch<SetIsDotedToFalseAction>) => {\n    return {\n        handleOnClick: (id: number, isDotShow: boolean) => {\n            // console.log('id为' + id)\n            if (!isDotShow) {\n                console.log('因为本身不带有Dot，所以阻断了dispatch请求');\n                return;\n            }\n            dispatch(setIsDotedToFalseActionCreator(id));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mine);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.styl';\n\ninterface Props {\n    isGoBackNeeded?: boolean;\n    leftTitle?: string;\n    leftTitleURL?: string;\n    middleTitle?: string;\n    rightTitle?: string;\n    rightTitleURL?: string;\n}\nconst judgeIsItIconfont: RegExp = /^&#.+;$/;\nclass Header extends Component<Props> {\n    render() {\n        const {\n            isGoBackNeeded = false,\n            leftTitle,\n            leftTitleURL,\n            middleTitle,\n            rightTitle,\n            rightTitleURL,\n        } = this.props;\n\n        //左侧的title的判断\n        let divLeft: JSX.Element;\n\n        if (isGoBackNeeded) {\n            if (leftTitle || leftTitleURL) {\n                throw new Error(\n                    '在确定了leftTitle是回退按钮时，不能传入leftTitle或者leftTitleURL了'\n                );\n            }\n            divLeft = (\n                <span\n                    className=\"icon iconfont\"\n                    onClick={() => window.history.back()}\n                >\n                    &#xe647;\n                </span>\n            );\n        } else {\n            if (leftTitle) {\n                if (judgeIsItIconfont.test(leftTitle)) {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>\n                                    <span\n                                        className=\"icon iconfont\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: leftTitle,\n                                        }}\n                                    ></span>\n                                </Link>\n                            </div>\n                        );\n                    } else {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <span\n                                    className=\"icon iconfont\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: leftTitle,\n                                    }}\n                                ></span>\n                            </div>\n                        );\n                    }\n                } else {\n                    if (leftTitleURL) {\n                        divLeft = (\n                            <div className=\"leftTitle\">\n                                <Link to={leftTitleURL}>{leftTitle}</Link>\n                            </div>\n                        );\n                    } else {\n                        divLeft = <div className=\"leftTitle\">{leftTitle}</div>;\n                    }\n                }\n            } else {\n                if (leftTitleURL) {\n                    throw new Error(\n                        '组件Props参数错误，传入leftTitleURL的前提是要传入leftTitle'\n                    );\n                } else {\n                    divLeft = (\n                        <span\n                            className=\"nothing-left\"\n                            onClick={(e) => e.preventDefault()}\n                        >\n                            nothing-left\n                        </span>\n                    );\n                }\n            }\n        }\n\n        //右侧的title的判断\n        let divRight: JSX.Element;\n\n        if (rightTitle) {\n            if (judgeIsItIconfont.test(rightTitle)) {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>\n                                <span\n                                    className=\"icon iconfont\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: rightTitle,\n                                    }}\n                                ></span>\n                            </Link>\n                        </div>\n                    );\n                } else {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <span\n                                className=\"icon iconfont\"\n                                dangerouslySetInnerHTML={{ __html: rightTitle }}\n                            ></span>\n                        </div>\n                    );\n                }\n            } else {\n                if (rightTitleURL) {\n                    divRight = (\n                        <div className=\"rightTitle\">\n                            <Link to={rightTitleURL}>{rightTitle}</Link>\n                        </div>\n                    );\n                } else {\n                    divRight = <div className=\"rightTitle\">{rightTitle}</div>;\n                }\n            }\n        } else {\n            if (rightTitleURL) {\n                throw new Error(\n                    '组件Props参数错误，传入rightTitleURL的前提是要传入rightTitle'\n                );\n            } else {\n                divRight = (\n                    <div\n                        className=\"nothing-right\"\n                        onClick={(e) => e.preventDefault()}\n                    >\n                        nothing-right\n                    </div>\n                );\n            }\n        }\n\n        //中间的title的判断\n        let divMiddle: JSX.Element;\n        if (middleTitle) {\n            divMiddle = <div className=\"middleTitle\">{middleTitle}</div>;\n        } else {\n            divMiddle = (\n                <div\n                    className=\"middleTitle no-middle-title\"\n                    onClick={(e) => e.preventDefault()}\n                >\n                    no-middle-title\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"baseUIHeader\">\n                {divLeft}\n                {divMiddle}\n                {divRight}\n            </div>\n        );\n    }\n}\n\nexport default Header;\n"],"sourceRoot":""}