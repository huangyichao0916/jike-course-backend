{"version":3,"sources":["components/allDiscoverTotalChoiceness/allDiscoverTotalChoicenessItem/index.tsx","pages/allDiscoverTotalChoiceness/index.tsx","mock/discover-total-choiceness-data/index.js"],"names":["AllDiscoverTotalChoicenessItem","this","props","title","avatar","className","src","alt","clickable","Component","AllDiscoverTotalChoiceness","state","data","axios","get","then","res","setState","allData","map","item","key","id","isGoBackNeeded","middleTitle","totalChoicenessData","require","urlReg","Mock","mock","option","url","match","randomNumArr","length","randomNum","Math","floor","random","push","Set"],"mappings":"2SA2BeA,E,4JAnBX,WAAU,IAAD,EACqBC,KAAKC,MAAvBC,EADH,EACGA,MAAOC,EADV,EACUA,OAEf,OACI,yBAAKC,UAAU,kCACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,KACI,yBAAKC,IAAKF,EAAQG,IAAI,OAG9B,yBAAKF,UAAU,SACX,yBAAKA,UAAU,SAASF,IAE5B,kBAAC,IAAD,CAAUK,WAAW,GAArB,qB,GAd6BC,aCIvCC,E,4MACFC,MAAQ,CACJC,KAAM,I,uDAEV,WAAqB,IAAD,OAChBC,IAAMC,IAAI,sCAAsCC,MAAK,SAACC,GAAD,OACjD,EAAKC,SAAS,CACVL,KAAMI,EAAIJ,Y,oBAItB,WAAU,IAGAM,EAFWjB,KAAKU,MAAdC,KAEiCO,KACrC,SAACC,GACG,OACI,kBAAC,EAAD,iBAAoCA,EAApC,CAA0CC,IAAKD,EAAKE,SAKhE,OACI,yBAAKjB,UAAU,8BACX,kBAAC,IAAD,CAAQkB,gBAAgB,EAAMC,YAAa,6BAC1CN,O,GAzBwBT,aA+B1BC,a,6DCzCTe,EAAsBC,EAAQ,IAC9BC,EAAS,0CAEFC,IAAKC,KAAKF,GAAQ,SAAUG,GAIrC,GAHgBA,EAARC,IACYC,MAAML,GAAQ,GAe9B,OAAOF,EAVP,IADA,IAAIQ,EAAe,GACZA,EAAaC,OAAS,GAAG,CAC5B,IAAMC,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAClCL,EAAaM,KAAKJ,GAClBF,EAAY,YAAO,IAAIO,IAAIP,IAK/B,OAFeA,EAAad,KAAI,SAACC,GAAD,OAAUK,EAAoBL,U","file":"static/js/21.f2f73abe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { DiscoverTotalChoicenessItemInt } from '@/pages/discover/discoverTotalChoiceness';\nimport MyButton from '@/baseUI/myButton';\nimport './allDiscoverTotalChoicenessItem.styl';\nimport LazyLoad from 'react-lazyload';\n\ninterface Props extends DiscoverTotalChoicenessItemInt {}\nclass AllDiscoverTotalChoicenessItem extends Component<Props, any> {\n    render() {\n        const { title, avatar } = this.props;\n\n        return (\n            <div className=\"allDiscoverTotalChoicenessItem\">\n                <div className=\"left\">\n                    <LazyLoad>\n                        <img src={avatar} alt=\"\" />\n                    </LazyLoad>\n                </div>\n                <div className=\"right\">\n                    <div className=\"title\">{title}</div>\n                </div>\n                <MyButton clickable={true}>查看</MyButton>\n            </div>\n        );\n    }\n}\n\nexport default AllDiscoverTotalChoicenessItem;\n","import React, { Component } from 'react';\nimport { DiscoverTotalChoicenessItemInt } from '@/pages/discover/discoverTotalChoiceness';\nimport './allDiscoverTotalChoiceness.styl';\nimport axios from 'axios';\nimport '@/mock/discover-total-choiceness-data';\nimport Header from '@/baseUI/header';\nimport AllDiscoverTotalChoicenessItem from '@/components/allDiscoverTotalChoiceness/allDiscoverTotalChoicenessItem';\n\ninterface State {\n    data: Array<DiscoverTotalChoicenessItemInt>;\n}\nclass AllDiscoverTotalChoiceness extends Component<any, State> {\n    state = {\n        data: [],\n    };\n    componentDidMount() {\n        axios.get('/mock/discover/totalChoiceness/all').then((res) =>\n            this.setState({\n                data: res.data,\n            })\n        );\n    }\n    render() {\n        const { data } = this.state;\n\n        const allData: Array<JSX.Element> = data.map(\n            (item: DiscoverTotalChoicenessItemInt) => {\n                return (\n                    <AllDiscoverTotalChoicenessItem {...item} key={item.id} />\n                );\n            }\n        );\n\n        return (\n            <div className=\"allDiscoverTotalChoiceness\">\n                <Header isGoBackNeeded={true} middleTitle={'精选合辑'} />\n                {allData}\n            </div>\n        );\n    }\n}\n\nexport default AllDiscoverTotalChoiceness;\n","import Mock from 'mockjs';\nconst totalChoicenessData = require('./totalChoiceness.json');\nconst urlReg = /mock\\/discover\\/totalChoiceness(\\/all)?/;\n\nconst data = Mock.mock(urlReg, function (option) {\n    const { url } = option;\n    const havaAll = url.match(urlReg)[1];\n\n    if (!havaAll) {\n        //如果URL中带有/all，那么就返回所有数据\n        let randomNumArr = [];\n        while (randomNumArr.length < 4) {\n            const randomNum = Math.floor(Math.random() * 40);\n            randomNumArr.push(randomNum);\n            randomNumArr = [...new Set(randomNumArr)];\n        }\n\n        const resArr = randomNumArr.map((item) => totalChoicenessData[item]);\n\n        return resArr;\n    } else {\n        return totalChoicenessData;\n    }\n});\n\nexport default data;\n"],"sourceRoot":""}